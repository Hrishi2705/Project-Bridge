{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrish\\\\OneDrive - hyderabad.bits-pilani.ac.in\\\\Desktop\\\\Project Bridge\\\\client\\\\src\\\\components\\\\student\\\\projectBank\\\\RequestFormModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CModal, CModalHeader, CModalTitle, CModalBody, CModalFooter, CButton, CForm, CFormTextarea } from \"@coreui/react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\n// import Box from '@mui/material/Box';\nimport TextField from \"@mui/material/TextField\";\nimport axios from \"axios\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport Alert from \"./Alert\";\nimport \"./RequestFormModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RequestFormModal = ({\n  visible,\n  onClose,\n  project,\n  userId,\n  selectedProject\n}) => {\n  _s();\n  // console.log(\"ProjectData:\", selectedProject);\n  const [formData, setFormData] = useState({\n    projectName: project.project_name || \"\",\n    projectDescription: project.project_description || \"\",\n    whyWantToDoProject: \"\",\n    currentCGPA: \"\",\n    selectedPrerequisites: [] // State to store selected prerequisites\n  });\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [draftDetails, setDraftDetails] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n  const [snackbarTitle, setSnackbarTitle] = useState(\"\");\n  const [alertStyle, setAlertStyle] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  useEffect(() => {\n    // Fetch draft details when component mounts\n    fetchDraftDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [project]);\n  const fetchDraftDetails = async () => {\n    try {\n      // Fetch draft details from the backend\n      const response = await axios.get(`http://localhost:8000/students/getDraft/${userId}/${project.projectId}`);\n      const draft = response.data;\n      // Update form data with draft details if draft exists\n      if (draft) {\n        setFormData({\n          projectName: draft.projectName || \"\",\n          projectDescription: draft.projectDescription || \"\",\n          whyWantToDoProject: draft.reason_to_do_project || \"\",\n          currentCGPA: draft.current_cgpa || \"\",\n          selectedPrerequisites: draft.pre_requisites_fulfilled || []\n        });\n        setDraftDetails(draft); // Store draft details in state\n      }\n    } catch (error) {\n      console.error(\"Error fetching draft details:\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handlePrerequisitesChange = event => {\n    const {\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      selectedPrerequisites: value\n    });\n  };\n  const handleSubmit = event => {\n    // Show confirmation message if the form is validated\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      // If the form is not valid, prevent the default form submission behavior\n      event.preventDefault();\n      event.stopPropagation();\n      console.log(\"Invalid Form\");\n    }\n    // Always set validated to true to display any validation feedback\n    setValidated(true);\n    setShowConfirmation(true);\n  };\n  const handleConfirmSendRequest = async () => {\n    try {\n      const requestData = {\n        studentId: userId,\n        reason_to_do_project: formData.whyWantToDoProject,\n        pre_requisites_fullfilled: formData.selectedPrerequisites\n      };\n      await axios.post(`http://localhost:8000/requests/storeRequest/${selectedProject.projectId}/${userId}`, requestData);\n      setShowConfirmation(false);\n      setSnackbarSeverity(\"success\");\n      setSnackbarTitle(\"Success\");\n      setSnackbarMessage(\"Request sent successfully\");\n      setSnackbarOpen(true);\n      console.log(\"part1\");\n      setTimeout(() => {\n        onClose(); // Close modal after 5 seconds\n        console.log(\"part2\");\n      }, 1000);\n    } catch (error) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarTitle(\"Failure\");\n      setSnackbarMessage(\"Error sending request\");\n      console.error(\"Error sending request:\", error);\n      setSnackbarOpen(true); // Open Snackbar for error case\n    }\n  };\n  const handleBack = () => {\n    // Hide confirmation message\n    setShowConfirmation(false);\n  };\n  const handleSaveDraft = async () => {\n    try {\n      await axios.post(`http://localhost:8000/students/saveDraft`, {\n        studentId: userId,\n        projectId: selectedProject.projectId,\n        projectName: selectedProject.project_name,\n        projectDescription: selectedProject.project_description,\n        whyWantToDoProject: formData.whyWantToDoProject,\n        currentCGPA: formData.currentCGPA,\n        selectedPrerequisites: formData.selectedPrerequisites\n      });\n      setSnackbarSeverity(\"success\");\n      setSnackbarTitle(\"Success\");\n      setSnackbarMessage(\"Draft saved successfully\");\n      setAlertStyle({\n        backgroundColor: \"#ddffdd\",\n        color: \"green\"\n      });\n      console.log(\"success log\");\n    } catch (error) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarTitle(\"Failure\");\n      setSnackbarMessage(\"Error saving draft\");\n      setAlertStyle({\n        backgroundColor: \"#ffdddd\",\n        color: \"red\"\n      });\n      console.error(\"Error saving draft:\", error);\n      console.log(\"failure log\");\n    }\n    setSnackbarOpen(true);\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CModal, {\n      backdrop: \"static\",\n      visible: visible,\n      onClose: onClose,\n      \"aria-labelledby\": \"RequestFormModalTitle\",\n      children: /*#__PURE__*/_jsxDEV(CForm, {\n        className: \"row g-3 needs-validation\",\n        noValidate: true,\n        validated: validated,\n        children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n            id: \"RequestFormModalTitle\",\n            children: \"Request Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(TextField\n          // labelId=\"name-label\"\n          , {\n            type: \"text\",\n            name: \"projectName\",\n            value: formData.projectName,\n            onChange: handleInputChange,\n            placeholder: \"Project Name\",\n            id: \"outlined-disabled\",\n            label: \"Project Name\",\n            defaultValue: \"Hello World\",\n            style: {\n              marginTop: \"25px\",\n              width: '100%'\n            },\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"projectDescription\",\n            value: formData.projectDescription,\n            onChange: handleInputChange,\n            placeholder: \"Project Description\",\n            id: \"outlined-disabled\",\n            label: \"Project Description\",\n            defaultValue: \"Hello World\",\n            style: {\n              marginTop: \"25px\",\n              width: '100%'\n            },\n            multiline: true,\n            maxRows: 4,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CFormTextarea, {\n            name: \"whyWantToDoProject\",\n            value: formData.whyWantToDoProject,\n            onChange: handleInputChange,\n            placeholder: \"Why do you want to do this project?\",\n            id: \"outlined\",\n            floatingLabel: \"Why do you want to do this project?\",\n            style: {\n              height: \"100px\",\n              marginTop: \"25px\",\n              width: '100%'\n            },\n            feedbackvalid: \"Looks good!\",\n            feedbackinvalid: \"Please fill the reason.\",\n            required: true\n            // defaultValue=\"Hello World\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              m: 1,\n              width: \"100%\",\n              marginTop: \"2rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"prerequisites-label\",\n              children: \"Prerequisites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"prerequisites-label\",\n              id: \"prerequisites-select\",\n              multiple: true,\n              value: formData.selectedPrerequisites,\n              onChange: handlePrerequisitesChange,\n              renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexWrap: \"wrap\"\n                },\n                children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: value,\n                  style: {\n                    margin: \"2px\"\n                  }\n                }, value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this),\n              children: project.pre_requisites.map(prerequisite => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: prerequisite,\n                children: prerequisite\n              }, prerequisite, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n          children: !showConfirmation ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              color: \"secondary\",\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"primary\",\n              onClick: handleSaveDraft,\n              children: \"Save Draft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"warning\",\n              onClick: handleSubmit,\n              children: \"Send Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              color: \"secondary\",\n              onClick: handleBack,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"success\",\n              onClick: handleConfirmSendRequest,\n              children: \"Confirm Send Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RequestFormModal, \"F3Vh1iu0+YNxIeHr7UkQkZxw8nk=\");\n_c = RequestFormModal;\nexport default RequestFormModal;\nvar _c;\n$RefreshReg$(_c, \"RequestFormModal\");","map":{"version":3,"names":["React","useState","useEffect","CModal","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","CForm","CFormTextarea","InputLabel","MenuItem","FormControl","Select","Chip","TextField","axios","Snackbar","AlertTitle","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","RequestFormModal","visible","onClose","project","userId","selectedProject","_s","formData","setFormData","projectName","project_name","projectDescription","project_description","whyWantToDoProject","currentCGPA","selectedPrerequisites","showConfirmation","setShowConfirmation","draftDetails","setDraftDetails","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTitle","setSnackbarTitle","alertStyle","setAlertStyle","validated","setValidated","fetchDraftDetails","response","get","projectId","draft","data","reason_to_do_project","current_cgpa","pre_requisites_fulfilled","error","console","handleInputChange","e","name","value","target","handlePrerequisitesChange","event","handleSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","log","handleConfirmSendRequest","requestData","studentId","pre_requisites_fullfilled","post","setTimeout","handleBack","handleSaveDraft","backgroundColor","color","handleSnackbarClose","reason","children","backdrop","className","noValidate","closeButton","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","label","defaultValue","style","marginTop","width","disabled","multiline","maxRows","floatingLabel","height","feedbackvalid","feedbackinvalid","required","m","labelId","multiple","renderValue","selected","display","flexWrap","map","margin","pre_requisites","prerequisite","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hrish/OneDrive - hyderabad.bits-pilani.ac.in/Desktop/Project Bridge/client/src/components/student/projectBank/RequestFormModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CButton,\r\n  CForm,\r\n  CFormTextarea,\r\n} from \"@coreui/react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Chip from \"@mui/material/Chip\";\r\n// import Box from '@mui/material/Box';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport Alert from \"./Alert\";\r\nimport \"./RequestFormModal.css\";\r\n\r\nconst RequestFormModal = ({\r\n  visible,\r\n  onClose,\r\n  project,\r\n  userId,\r\n  selectedProject,\r\n}) => {\r\n  // console.log(\"ProjectData:\", selectedProject);\r\n  const [formData, setFormData] = useState({\r\n    projectName: project.project_name || \"\",\r\n    projectDescription: project.project_description || \"\",\r\n    whyWantToDoProject: \"\",\r\n    currentCGPA: \"\",\r\n    selectedPrerequisites: [], // State to store selected prerequisites\r\n  });\r\n\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [draftDetails, setDraftDetails] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\r\n  const [snackbarTitle, setSnackbarTitle] = useState(\"\");\r\n  const [alertStyle, setAlertStyle] = useState(\"\");\r\n  const [validated, setValidated] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    // Fetch draft details when component mounts\r\n    fetchDraftDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [project]);\r\n\r\n  const fetchDraftDetails = async () => {\r\n    try {\r\n      // Fetch draft details from the backend\r\n      const response = await axios.get(\r\n        `http://localhost:8000/students/getDraft/${userId}/${project.projectId}`\r\n      );\r\n      const draft = response.data;\r\n      // Update form data with draft details if draft exists\r\n      if (draft) {\r\n        setFormData({\r\n          projectName: draft.projectName || \"\",\r\n          projectDescription: draft.projectDescription || \"\",\r\n          whyWantToDoProject: draft.reason_to_do_project || \"\",\r\n          currentCGPA: draft.current_cgpa || \"\",\r\n          selectedPrerequisites: draft.pre_requisites_fulfilled || [],\r\n        });\r\n        setDraftDetails(draft); // Store draft details in state\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching draft details:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handlePrerequisitesChange = (event) => {\r\n    const { value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      selectedPrerequisites: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    // Show confirmation message if the form is validated\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      // If the form is not valid, prevent the default form submission behavior\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      console.log(\"Invalid Form\");\r\n    }\r\n    // Always set validated to true to display any validation feedback\r\n    setValidated(true);\r\n    setShowConfirmation(true);\r\n  };\r\n  \r\n  const handleConfirmSendRequest = async () => {\r\n    try {\r\n      const requestData = {\r\n        studentId: userId,\r\n        reason_to_do_project: formData.whyWantToDoProject,\r\n        pre_requisites_fullfilled: formData.selectedPrerequisites,\r\n      };\r\n  \r\n      await axios.post(\r\n        `http://localhost:8000/requests/storeRequest/${selectedProject.projectId}/${userId}`,\r\n        requestData\r\n      );\r\n  \r\n      setShowConfirmation(false);\r\n  \r\n      setSnackbarSeverity(\"success\");\r\n      setSnackbarTitle(\"Success\");\r\n      setSnackbarMessage(\"Request sent successfully\");\r\n\r\n      setSnackbarOpen(true);\r\n      console.log(\"part1\");\r\n      setTimeout(() => {\r\n        onClose(); // Close modal after 5 seconds\r\n        console.log(\"part2\");\r\n      }, 1000);\r\n      \r\n    } catch (error) {\r\n      setSnackbarSeverity(\"error\");\r\n      setSnackbarTitle(\"Failure\");\r\n      setSnackbarMessage(\"Error sending request\");\r\n      console.error(\"Error sending request:\", error);\r\n      setSnackbarOpen(true); // Open Snackbar for error case\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const handleBack = () => {\r\n    // Hide confirmation message\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  const handleSaveDraft = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:8000/students/saveDraft`, {\r\n        studentId: userId,\r\n        projectId: selectedProject.projectId,\r\n        projectName: selectedProject.project_name,\r\n        projectDescription: selectedProject.project_description,\r\n        whyWantToDoProject: formData.whyWantToDoProject,\r\n        currentCGPA: formData.currentCGPA,\r\n        selectedPrerequisites: formData.selectedPrerequisites,\r\n      });\r\n      setSnackbarSeverity(\"success\");\r\n      setSnackbarTitle(\"Success\");\r\n      setSnackbarMessage(\"Draft saved successfully\");\r\n      setAlertStyle({\r\n        backgroundColor: \"#ddffdd\",\r\n        color: \"green\",\r\n      });\r\n      console.log(\"success log\");\r\n    } catch (error) {\r\n      setSnackbarSeverity(\"error\");\r\n      setSnackbarTitle(\"Failure\");\r\n      setSnackbarMessage(\"Error saving draft\");\r\n      setAlertStyle({\r\n        backgroundColor: \"#ffdddd\",\r\n        color: \"red\",\r\n      });\r\n      console.error(\"Error saving draft:\", error);\r\n      console.log(\"failure log\");\r\n    }\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CModal\r\n        backdrop=\"static\"\r\n        visible={visible}\r\n        onClose={onClose}\r\n        aria-labelledby=\"RequestFormModalTitle\"\r\n      >\r\n        <CForm\r\n          className=\"row g-3 needs-validation\"\r\n          noValidate\r\n          validated={validated}\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle id=\"RequestFormModalTitle\">Request Form</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            {/* Form fields */}\r\n            <TextField\r\n              // labelId=\"name-label\"\r\n              type=\"text\"\r\n              name=\"projectName\"\r\n              value={formData.projectName}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Project Name\"\r\n              id=\"outlined-disabled\"\r\n              label=\"Project Name\"\r\n              defaultValue=\"Hello World\"\r\n              style={{ marginTop: \"25px\", width: '100%' }}\r\n              disabled\r\n            />\r\n            <TextField\r\n              name=\"projectDescription\"\r\n              value={formData.projectDescription}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Project Description\"\r\n              id=\"outlined-disabled\"\r\n              label=\"Project Description\"\r\n              defaultValue=\"Hello World\"\r\n              style={{ marginTop: \"25px\" , width: '100%'}}\r\n              multiline\r\n              maxRows={4}\r\n              disabled\r\n            />\r\n            <CFormTextarea\r\n              name=\"whyWantToDoProject\"\r\n              value={formData.whyWantToDoProject}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Why do you want to do this project?\"\r\n              id=\"outlined\"\r\n              floatingLabel=\"Why do you want to do this project?\"\r\n              style={{ height: \"100px\", marginTop: \"25px\" , width: '100%'}}\r\n              feedbackvalid=\"Looks good!\"\r\n              feedbackinvalid=\"Please fill the reason.\"\r\n              required\r\n              // defaultValue=\"Hello World\"\r\n            />\r\n            {/* Multi-select input for prerequisites */}\r\n            <FormControl style={{ m: 1, width: \"100%\", marginTop: \"2rem\" }}>\r\n              <InputLabel id=\"prerequisites-label\">Prerequisites</InputLabel>\r\n              <Select\r\n                labelId=\"prerequisites-label\"\r\n                id=\"prerequisites-select\"\r\n                multiple\r\n                value={formData.selectedPrerequisites}\r\n                onChange={handlePrerequisitesChange}\r\n                renderValue={(selected) => (\r\n                  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {selected.map((value) => (\r\n                      <Chip\r\n                        key={value}\r\n                        label={value}\r\n                        style={{ margin: \"2px\" }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              >\r\n                {project.pre_requisites.map((prerequisite) => (\r\n                  <MenuItem key={prerequisite} value={prerequisite}>\r\n                    {prerequisite}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            {!showConfirmation ? (\r\n              <React.Fragment>\r\n                <CButton color=\"secondary\" onClick={onClose}>\r\n                  Close\r\n                </CButton>\r\n                <CButton color=\"primary\" onClick={handleSaveDraft}>\r\n                  Save Draft\r\n                </CButton>\r\n                <CButton color=\"warning\" onClick={handleSubmit}>\r\n                  Send Request\r\n                </CButton>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <CButton color=\"secondary\" onClick={handleBack}>\r\n                  Back\r\n                </CButton>\r\n                <CButton color=\"success\" onClick={handleConfirmSendRequest}>\r\n                  Confirm Send Request\r\n                </CButton>\r\n              </React.Fragment>\r\n            )}\r\n          </CModalFooter>\r\n        </CForm>\r\n      </CModal>\r\n      {/* <Snackbar\r\n        id=\"alert_snackbar\"\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          id=\"alert_toast\"\r\n          onClose={handleSnackbarClose}\r\n          severity={snackbarSeverity}\r\n          sx={{ width: \"100%\" }}\r\n          style={alertStyle}\r\n        >\r\n          <AlertTitle>{snackbarTitle}</AlertTitle>\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestFormModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}