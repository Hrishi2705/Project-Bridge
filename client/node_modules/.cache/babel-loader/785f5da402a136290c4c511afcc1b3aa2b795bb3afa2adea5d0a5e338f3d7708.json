{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hrish\\\\OneDrive - hyderabad.bits-pilani.ac.in\\\\Desktop\\\\Project Bridge\\\\client\\\\src\\\\components\\\\teacher\\\\teacher_home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectDetailsForm from './project_details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeacherHome = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  // Fetch projects from the server\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/projects/teacher/${window.location.pathname.split('/')[2]}`);\n        setProjects(response.data);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  // Function to handle editing project details\n  const handleEditProject = editedProject => {\n    // Find the index of the edited project in the projects array\n    const index = projects.findIndex(project => project._id === editedProject._id);\n    // Create a copy of the projects array\n    const updatedProjects = [...projects];\n    // Replace the edited project with the updated project in the copied array\n    updatedProjects[index] = editedProject;\n    // Update the state with the new array of projects\n    setProjects(updatedProjects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teacher Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid black',\n          padding: '10px',\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProjectDetailsForm, {\n          project: project,\n          onEdit: handleEditProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherHome, \"HYp3BKs9VpRLZxBGL+Kp5Gm1U0o=\");\n_c = TeacherHome;\nexport default TeacherHome;\nvar _c;\n$RefreshReg$(_c, \"TeacherHome\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProjectDetailsForm","jsxDEV","_jsxDEV","TeacherHome","_s","projects","setProjects","selectedProject","setSelectedProject","fetchProjects","response","get","window","location","pathname","split","data","error","console","handleEditProject","editedProject","index","findIndex","project","_id","updatedProjects","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","map","border","padding","margin","name","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/hrish/OneDrive - hyderabad.bits-pilani.ac.in/Desktop/Project Bridge/client/src/components/teacher/teacher_home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectDetailsForm from './project_details'; \r\n\r\nconst TeacherHome = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n  // Fetch projects from the server\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/projects/teacher/${window.location.pathname.split('/')[2]}`);\r\n        setProjects(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching projects:', error);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  // Function to handle editing project details\r\n  const handleEditProject = (editedProject) => {\r\n    // Find the index of the edited project in the projects array\r\n    const index = projects.findIndex((project) => project._id === editedProject._id);\r\n    // Create a copy of the projects array\r\n    const updatedProjects = [...projects];\r\n    // Replace the edited project with the updated project in the copied array\r\n    updatedProjects[index] = editedProject;\r\n    // Update the state with the new array of projects\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>Teacher Home</h1>\r\n      <div>\r\n        <h2>Projects</h2>\r\n        {projects.map((project) => (\r\n          <div key={project._id} style={{ border: '1px solid black', padding: '10px', margin: '10px' }}>\r\n            <h3>{project.name}</h3>\r\n            <ProjectDetailsForm project={project} onEdit={handleEditProject} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherHome;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,0CAAyCC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,EAAC,CAAC;QACpHT,WAAW,CAACI,QAAQ,CAACM,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,iBAAiB,GAAIC,aAAa,IAAK;IAC3C;IACA,MAAMC,KAAK,GAAGhB,QAAQ,CAACiB,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKJ,aAAa,CAACI,GAAG,CAAC;IAChF;IACA,MAAMC,eAAe,GAAG,CAAC,GAAGpB,QAAQ,CAAC;IACrC;IACAoB,eAAe,CAACJ,KAAK,CAAC,GAAGD,aAAa;IACtC;IACAd,WAAW,CAACmB,eAAe,CAAC;EAC9B,CAAC;EAED,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClC1B,OAAA;MAAA0B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChB3B,QAAQ,CAAC4B,GAAG,CAAEV,OAAO,iBACpBrB,OAAA;QAAuBwB,KAAK,EAAE;UAAEQ,MAAM,EAAE,iBAAiB;UAAEC,OAAO,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAAR,QAAA,gBAC3F1B,OAAA;UAAA0B,QAAA,EAAKL,OAAO,CAACc;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvB9B,OAAA,CAACF,kBAAkB;UAACuB,OAAO,EAAEA,OAAQ;UAACe,MAAM,EAAEnB;QAAkB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAF3DT,OAAO,CAACC,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA5CID,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}